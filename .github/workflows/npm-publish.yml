name: Node.js CI/CD user-service

on:
  push:
    branches: 
      - main
      - release/*
  pull_request:
    branches: [ "main" ]

jobs:
  BuildandTest:
    runs-on: ubuntu-latest
    name: Build and Test
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Install dependencies
      run: npm install
    - name: Build
      run: npm run build --if-present
    - name: Depcheck
      uses: dependency-check/Dependency-Check_Action@main
      id: Depcheck
      with:
        project: 'test'
        path: '.' # Update this path if necessary
        format: 'HTML'
        out: 'reports'
        args: >
          --failOnCVSS 7
          --enableRetired
    - name: Upload Test results
      uses: actions/upload-artifact@v2
      with:
        name: depcheck-report
        path: ${{ github.workspace }}/reports
    - name: Test
      run: npm test
  SnykSecurityScan:
    needs: BuildandTest
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Install Snyk CLI
      run: npm install -g snyk
    - name: Authenticate with Snyk
      run: snyk auth ${{ secrets.SNYK_API_TOKEN }}
    - name: Snyk Scan
      run: snyk test --json > snyk_report.json || true
    - name: Upload Snyk report
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: snyk-report
        path: snyk_report.json
  Containerization:
    needs: BuildandTest
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_TOKEN  }} # Using Docker password secret

    - name: Build Docker image
      run: |
        docker build -t ctse2024/user-service:v1.0.0.0 .

    - name: Scan Docker image for vulnerabilities
      run: |
        docker run --rm -v /var/run/docker.sock:/var/run/docker.sock -v $(pwd):/root/ aquasec/trivy image ctse2024/user-service:v1.0.0.0 > trivy_report.json || true

    - name: Upload Trivy report
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: trivy-report
        path: trivy_report.json
    - name: Push Docker image to Docker Hub
      run: |
        docker push ctse2024/user-service:v1.0.0.0
  Deployment:
    needs: Containerization
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Kubectl
        uses: azure/aks-set-context@v1
        with:
          creds: '{"appId": "653a6a83-853a-4a6b-b15c-18a5807ca32c", "password": "VYm8Q~sLKstR9f9g1rF7_zr-SVFp40KdR_jscbyK", "tenant": "84c31ca0-ac3b-4eae-ad11-519d80233e6f"}'
          cluster-name: ctse-cluster
          resource-group: ctse-resource-group

      - name: Deploy to Kubernetes
        uses: azure/k8s-deploy@v1
        with:
          manifests: kubernetes/user-deployment.yaml, kubernetes/user-service.yaml
          namespace: default
          images: ctse2024/user-service:v1.0.0.0
